#!/bin/sh
# https://source.chromium.org/chromium
# https://chromium.googlesource.com/chromium/src/+/HEAD
# https://chromium.googlesource.com/chromium/src/+/HEAD/DEPS
# https://chromium.googlesource.com/chromium/tools/depot_tools/+/HEAD


common:
	python3 tools/clang/scripts/update.py

	download_from_google_storage.py --no_resume --extract --no_auth --bucket chromium-nodejs -s src/third_party/node/node_modules.tar.gz.sha1
or
	wget -c -nv "https://commondatastorage.googleapis.com/chromium-nodejs/$(cat third_party/node/node_modules.tar.gz.sha1)" -O node_modules.tar.gz
	tar xf node_modules.tar.gz -C third_party/node
	rm node_modules.tar.gz



linux:
	python3 build/linux/sysroot_scripts/install-sysroot.py --arch=amd64
	# x64 == amd64

	node_ver='v18.16.0'
	wget -nv -c "https://nodejs.org/dist/${node_ver}/node-${node_ver}-linux-x64.tar.xz"
	install -d third_party/node/linux/node-linux-x64
	tar xf "node-${node_ver}-linux-x64.tar.xz" --strip-components=1 -C third_party/node/linux/node-linux-x64
	third_party/node/linux/node-linux-x64/bin/node --version && rm "node-${node_ver}-linux-x64.tar.xz"
or
	download_from_google_storage.py --no_resume --extract --no_auth --bucket chromium-nodejs/16.13.0 -s third_party/node/linux/node-linux-x64.tar.gz.sha1


android:
	python3 build/linux/sysroot_scripts/install-sysroot.py --arch=x64
	python3 build/linux/sysroot_scripts/install-sysroot.py --arch=x86

	# download_from_google_storage.py 的 Shebang 虽然是 python3，但由于属于 depot_tools，直接python运行会报错
	download_from_google_storage.py --no_resume --no_auth --bucket chromium-ads-detection -s src/third_party/subresource-filter-ruleset/data/UnindexedRules.sha1
or
	wget -c -nv "https://commondatastorage.googleapis.com/chromium-ads-detection/$(cat third_party/subresource-filter-ruleset/data/UnindexedRules.sha1)" \
		-O third_party/subresource-filter-ruleset/data/UnindexedRules

	# tools/download_optimization_profile.py 的 Shebang 是 vpython3，直接python运行并不会报错
	python3 tools/download_optimization_profile.py --newest_state=src/chrome/android/profiles/newest.txt --local_state=src/chrome/android/profiles/local.txt --output_name=src/chrome/android/profiles/afdo.prof --gs_url_base=chromeos-prebuilt/afdo-job/llvm
or
	wget -c -nv "https://commondatastorage.googleapis.com/chromeos-prebuilt/afdo-job/llvm/$(cat chrome/android/profiles/newest.txt)" -O chrome/android/profiles/afdo.prof.bz2
	(cd chrome/android/profiles; bunzip2 afdo.prof.bz2)



windows:
	ENV:
		set DEPOT_TOOLS_WIN_TOOLCHAIN=0
		set vs2022_install="C:\Program Files\Microsoft Visual Studio\2022\Community" Enterprise/Professional

	wget -c -nv "https://commondatastorage.googleapis.com/chromium-browser-clang/rc/$(cat build/toolchain/win/rc/win/rc.exe.sha1)" \
		-O build/toolchain/win/rc/win/rc.exe

	git clone --depth=1 "https://chromium.googlesource.com/chromium/deps/gperf" third_party/gperf

	wget -c -nv "https://chrome-infra-packages.appspot.com/dl/infra/3pp/tools/7z/windows-amd64/+/latest" -O lzma-sdk-win64.zip
	7z x lzma-sdk-win64.zip '7z*' -othird_party/lzma_sdk/bin/win64
	copy third_party/lzma_sdk/bin/win64/7z* third_party/lzma_sdk/bin/host_platform
	del lzma-sdk-win64.zip

	node_ver='v18.16.0'
	wget -nv -c "https://nodejs.org/dist/${node_ver}/win-x64/node.exe" -P "src/third_party/node/win"
	third_party/node/win/node.exe --version
or
	download_from_google_storage.py --no_resume --extract --no_auth --bucket chromium-nodejs/16.13.0 -s third_party/node/win/node.exe.sha1



win-cross:
# https://chromium.googlesource.com/chromium/tools/depot_tools/+/HEAD/win_toolchain/package_from_installed.py
# https://chromium.googlesource.com/chromium/tools/depot_tools/+/HEAD/win_toolchain/get_toolchain_if_necessary.py
	wget -c -nv "https://commondatastorage.googleapis.com/chromium-browser-clang/rc/$(cat build/toolchain/win/rc/linux64/rc.sha1)" \
		-O build/toolchain/win/rc/linux64/rc
	chmod +x build/toolchain/win/rc/linux64/rc

	wget -c -nv "https://chrome-infra-packages.appspot.com/dl/infra/3pp/tools/7z/windows-amd64/+/latest" -O lzma-sdk-win64.zip
	wget -c -nv "https://chrome-infra-packages.appspot.com/dl/infra/3pp/tools/7z/linux-amd64/+/latest" -O lzma-sdk-linux64.zip
	unzip lzma-sdk-win64.zip 7z* -d third_party/lzma_sdk/bin/win64
	unzip lzma-sdk-linux64.zip 7z* -d third_party/lzma_sdk/bin/host_platform
	rm -f lzma-sdk-win64.zip lzma-sdk-linux64.zip


	GET-<host_platform>-NODE binary


export DEPOT_TOOLS_WIN_TOOLCHAIN_BASE_URL="/path/to/WinToolchain"; grep '^TOOLCHAIN_HASH' src/build/vs_toolchain.py|sed 's/\s//g' >tmpp; . ./tmpp
export GYP_MSVS_HASH_${TOOLCHAIN_HASH}="<WinToolchain hash>"; rm ./tmpp
echo "DEPOT_TOOLS_WIN_TOOLCHAIN_BASE_URL:: $DEPOT_TOOLS_WIN_TOOLCHAIN_BASE_URL"
echo "GYP_MSVS_HASH_${TOOLCHAIN_HASH}:: $(env|grep GYP_MSVS_HASH)"

	download_from_google_storage.py --no_resume --no_auth --bucket chromium-browser-clang/ciopfs -s build/ciopfs.sha1
or
	wget -c -nv "https://storage.googleapis.com/chromium-browser-clang/ciopfs/$(cat build/ciopfs.sha1)" \
		-O build/ciopfs && chmod +x build/ciopfs

	python3 build/vs_toolchain.py update --force
	// tools/clang/scripts/update.py 需要在这之后运行

build win64:
	python3 build/linux/sysroot_scripts/install-sysroot.py --arch=x64

build win32:
	python3 build/linux/sysroot_scripts/install-sysroot.py --arch=x64
	python3 build/linux/sysroot_scripts/install-sysroot.py --arch=x86



other:
	1. pgo_profiles (win 没有这个也能编译成功, linux/android 尚未确认)

	tools/update_pgo_profiles.py --target=linux update --gs-url-base=chromium-optimization-profiles/pgo_profiles
or
	wget -c -nv "https://commondatastorage.googleapis.com/chromium-optimization-profiles/pgo_profiles/$(cat chrome/build/linux.pgo.txt)" -P chrome/build/pgo_profiles
	chrome/build/win32.pgo.txt
	chrome/build/win64.pgo.txt

